---
# yaml-language-server:$schema=https://gist.githubusercontent.com/ajgon/4b9a6b7b0822644083d0890a20704b75/raw/argocd-application.schema.json
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  destination:
    namespace: cert-manager
    server: https://kubernetes.default.svc
  project: default
  source:
    path: helm/core/cert-manager
    repoURL: https://github.com/ajgon/home-ops.git
    targetRevision: master
    helm:
      valueFiles:
        - secrets+age-import-kubernetes://argocd/helm-secrets-private-keys#key.asc?../../../projects/default/secrets.yaml
      values: |
        cert-manager:
          replicaCount: 2
          extraArgs:
            - "--dns01-recursive-nameservers-only"
            - "--dns01-recursive-nameservers=9.9.9.9:53,1.1.1.1:53"
          podAnnotations:
            seccomp.security.alpha.kubernetes.io/pod: runtime/default
          installCRDs: true
          fullnameOverride: cert-manager
          serviceLabels:
            release: prometheus-stack
          ingressShim:
            defaultIssuerName: "{{ .Values.secrets.global.letsencrypt_issuer }}"
            defaultIssuerKind: ClusterIssuer
          prometheus:
            enabled: true
            servicemonitor:
              enabled: true
              labels:
                release: prometheus-stack
          securityContext: &securityContext
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          containerSecurityContext: &containerSecurityContext
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              memory: 1Gi
          cainjector: &extraPod
            podAnnotations:
              seccomp.security.alpha.kubernetes.io/pod: runtime/default
            replicaCount: 2
            securityContext: *securityContext
            containerSecurityContext: *containerSecurityContext
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 1Gi
          startupapicheck: *extraPod
          webhook: *extraPod
  syncPolicy:
    automated:
      allowEmpty: false
      selfHeal: false
      prune: true
    syncOptions:
      - CreateNamespace=true
