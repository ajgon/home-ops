---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: kube-prometheus-stack-prometheus
    role: alert-rules
    release: prometheus-stack
  name: redis-ha
  namespace: storage
spec:
  groups:
    - name: redis.rules
      rules:
        - alert: RedisDown
          expr: redis_up == 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Redis down (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis pod is down
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisDisconnectedSlaves
          expr: >
            count without (pod, job) (redis_connected_slaves) - sum without (pod, job) (redis_connected_slaves) - 1 > 1
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Redis disconnected slaves (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis not replicating for all slaves. Consider reviewing the redis replication status.
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisReplicationBroken
          expr: delta(redis_connected_slaves[1m]) < 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Redis replication broken (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis pod lost a slave
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisClusterFlapping
          expr: changes(redis_connected_slaves[1m]) > 1
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: Redis cluster flapping (pod {{`{{ $labels.pod }}`}})
            description: |-
              Changes have been detected in Redis replica connection.
              This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        # The exporter must be started with --include-system-metrics flag
        # or REDIS_EXPORTER_INCL_SYSTEM_METRICS=true environment variable.
        - alert: RedisOutOfSystemMemory
          expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Redis out of system memory (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis is running out of system memory (> 90%)
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisTooManyConnections
          expr: redis_connected_clients > 100
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Redis too many connections (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis pod has too many connections
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisNotEnoughConnections
          expr: redis_connected_clients < 5
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Redis not enough connections (pod {{`{{ $labels.pod }}`}})
            description: |-
              Redis pod should have more connections (> 5)
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
        - alert: RedisRejectedConnections
          expr: increase(redis_rejected_connections_total[1m]) > 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Redis rejected connections (pod {{`{{ $labels.pod }}`}})
            description: |-
              Some connections to Redis has been rejected
                VALUE = {{`{{ $value }}`}}
                LABELS = {{`{{ $labels }}`}}
